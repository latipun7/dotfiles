# -*-zsh-*- vim:ft=zsh

source "$HOME/.local/bin/_functions"

# ░█░█░█▀▄░█▀▀░░░█▀▄░█▀█░█▀▀░█▀▀░░░█▀▄░▀█▀░█▀▄
# ░▄▀▄░█░█░█░█░░░█▀▄░█▀█░▀▀█░█▀▀░░░█░█░░█░░█▀▄
# ░▀░▀░▀▀░░▀▀▀░░░▀▀░░▀░▀░▀▀▀░▀▀▀░░░▀▀░░▀▀▀░▀░▀

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

# npm
export npm_config_userconfig="$XDG_CONFIG_HOME/npmrc"

# Yarn
export YARN_CACHE_FOLDER="$XDG_CACHE_HOME/yarn"
export YARN_GLOBAL_FOLDER="$XDG_DATA_HOME/yarn"

# Rust
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

# NCureses
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo":/usr/share/terminfo

# Go
export GOPATH="$XDG_DATA_HOME/go"

# WGet
export WGETRC="$XDG_CONFIG_HOME/wgetrc"

# Node
export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"

# Wakatime
export WAKATIME_HOME="$XDG_CONFIG_HOME/wakatime"

# PM2
export PM2_HOME="$XDG_CACHE_HOME/pm2"

# postgreSQL
export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PGPASSFILE="$XDG_CONFIG_HOME/pg/pgpass"
export PSQL_HISTORY="$XDG_STATE_HOME/psql_history"
export PGSERVICEFILE="$XDG_CONFIG_HOME/pg/pg_service.conf"

# zsh
export HISTFILE="$XDG_STATE_HOME/zsh/history"

# CUDA
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"

# ░█▀█░█▀█░▀█▀░█░█░█▀▀
# ░█▀▀░█▀█░░█░░█▀█░▀▀█
# ░▀░░░▀░▀░░▀░░▀░▀░▀▀▀

# Make homebrew PATH available
if hash brew 2>/dev/null; then
  eval "$(brew shellenv)"
elif [[ "$OSTYPE" == linux-gnu ]]; then
  [ -d "/home/linuxbrew/.linuxbrew" ] &&
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  [ -d "$HOME/.linuxbrew" ] &&
    eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"
elif [[ "$OSTYPE" == darwin* ]]; then
  [ -d "/usr/local/Cellar" ] &&
    eval "$(/usr/local/bin/brew shellenv)"
fi

# Custom path
! (echo "$PATH" | grep -q "$HOME/.local/bin") && homeexe="$HOME/.local/bin"
hash cargo 2>/dev/null && cargoexe="$CARGO_HOME/bin"
hash go 2>/dev/null && goexe="$GOPATH/bin"
brewpythonexe=$(hash brew 2>/dev/null && echo "$(brew --prefix)/opt/python/libexec/bin")

pathexe=("$homeexe" "$cargoexe" "$goexe" "$brewpythonexe" "$PATH")

PATH=$(concat ":" "${pathexe[@]}")
export PATH

# Node global module require path
if hash node 2>/dev/null; then
  nodelink=$(readlink -e "$(which node)")
  NODE_PATH=$(cd "${nodelink:0:-4}../lib/node_modules" && pwd)
  export NODE_PATH
fi

# ░█▀▄░█▀▀░█▀▀░█▀█░█░█░█░░░▀█▀░█▀▀
# ░█░█░█▀▀░█▀▀░█▀█░█░█░█░░░░█░░▀▀█
# ░▀▀░░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░░▀░░▀▀▀

# Editor
if [[ "${TERM_PROGRAM:-tty}" == *vscode* ]]; then
  export VISUAL="code --wait"
  export EDITOR="code --wait"
elif hash lvim 2>/dev/null; then
  export VISUAL=lvim
  export EDITOR=lvim
else
  export VISUAL=nvim
  export EDITOR=nvim
fi

if [[ "$(hostnamectl chassis)" != 'server' && "$(hostnamectl chassis)" != *hostnamectl* ]]; then
  export TERMINAL="wezterm start"
  export BROWSER=brave
else
  export BROWSER=lynx
fi

# ░▀█▀░█░█░█▀▀░█▀█░█░█░█▀▀
# ░░█░░█▄█░█▀▀░█▀█░█▀▄░▀▀█
# ░░▀░░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀▀

# `fnm` setup
if hash fnm &>/dev/null; then
  export FNM_DIR="$XDG_DATA_HOME/fnm"

  eval "$(fnm env --use-on-cd)"
fi

# fzf configs
if hash fzf 2>/dev/null; then
  # catppuccin mocha colors
  export FZF_DEFAULT_OPTS="--border --tabstop=2 \
    --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
    --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
    --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

  if hash fd 2>/dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow'

    _fzf_compgen_path() {
      fd --hidden --follow . "$1"
    }

    _fzf_compgen_dir() {
      fd --type d --hidden --follow . "$1"
    }

    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  fi
fi

# Invoking gpg-agent
# https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
# GPG_TTY="$(tty)"
# see: https://github.com/romkatv/powerlevel10k/issues/524
export GPG_TTY="$TTY"

# Batman syntax highlight for man pages -> https://github.com/sharkdp/bat#man
hash bat 2>/dev/null && export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Misc
export LESS='--RAW-CONTROL-CHARS --ignore-case'
export FORCE_COLOR=true

# ░█▀█░█▀▄░▀█▀░█░█░█▀█░▀█▀░█▀▀░░░█▀▀░█▀█░█░█
# ░█▀▀░█▀▄░░█░░▀▄▀░█▀█░░█░░█▀▀░░░█▀▀░█░█░▀▄▀
# ░▀░░░▀░▀░▀▀▀░░▀░░▀░▀░░▀░░▀▀▀░░░▀▀▀░▀░▀░░▀░

if [ -f "$HOME/.zshenv.private" ]; then
  source "$HOME/.zshenv.private"
fi

# ░█▀▀░█░█░█▀▀░▀█▀░█▀█░█▄█░░░█▀▀░█▀█░█░█
# ░█░░░█░█░▀▀█░░█░░█░█░█░█░░░█▀▀░█░█░▀▄▀
# ░▀▀▀░▀▀▀░▀▀▀░░▀░░▀▀▀░▀░▀░░░▀▀▀░▀░▀░░▀░

if [ -f "$HOME/.zshenv.custom" ]; then
  source "$HOME/.zshenv.custom"
fi

#!/usr/bin/env bash

date="/tmp/eww_osd_brightness.date"
icons=("󰃞" "󰃟" "󰃠")
light=$(brightnessctl | grep -i 'current' | awk '{ print $4}' | tr -d '(%)')

function osd_handler() {
  lock=0
  rundate=0

  if [ ! -f "$date" ]; then
    echo 0 >"$date"
  fi

  while true; do
    # get dates
    rundate=$(cat "$date")
    currentdate=$(date +%s)

    # handle showing
    if [ "$rundate" = "$currentdate" ] && [ "$lock" -eq 0 ]; then
      eww open osd
      eww update osd_bright=true
      lock=1
    elif [ "$((currentdate - rundate))" = "2" ] && [ "$lock" -eq 1 ]; then
      eww update osd_bright=false
      lock=0
      if [ "$(eww get osd_vol)" = "false" ] && [ "$(eww get osd_bright)" = "false" ]; then
        eww close osd
      fi
    fi

    sleep 0.1
  done

  eww close osd
}

function osd() {
  date +%s >"$date"
}

if [ "$1" = "osd" ]; then
  osd
else
  osd_handler &

  # initial balue
  icon=${icons[$(awk -v n="$light" 'BEGIN{print int(n/34)}')]}
  echo '{ "level": '"$light"', "icon": "'"$icon"'" }'

  udevadm monitor | rg --line-buffered "backlight" | while read -r _; do
    light=$(brightnessctl | grep -i 'current' | awk '{ print $4}' | tr -d '(%)')

    icon="${icons[$(awk -v n="$light" 'BEGIN{print int(n/34)}')]}"
    echo '{ "level": '"$light"', "icon": "'"$icon"'" }'
  done
fi

{
  "exportClass": {
    "prefix": "clae",
    "body": [
      "class ${1:${TM_FILENAME_BASE}} {",
      "\t$0",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Export default class in ES6 syntax"
  },

  "exportClassExtends": {
    "prefix": "claexe",
    "body": [
      "class ${1:${TM_FILENAME_BASE}} extends ${2:BaseClassName} {",
      "\t$0",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Export default class which extends a base one in ES6 syntax"
  },

  "constructor": {
    "prefix": "con",
    "body": ["constructor(${1:params}) {", "\t${2}", "}", "", "${0}"],
    "description": "Add default constructor in a class in ES6 syntax"
  },

  "super": {
    "prefix": "sup",
    "body": "super(${1:params})\n${0}",
    "description": "Add default super in a class constructor"
  },

  "method": {
    "prefix": "met",
    "body": "${1:methodName}(${2:params}) {\n\t${0}\n}",
    "description": "Creates a method inside a class in ES6 syntax"
  },

  "propertyGet": {
    "prefix": "getp",
    "body": "get ${1:propertyName}() {\n\treturn this.${0};\n}",
    "description": "Creates a getter property inside a class in ES6 syntax"
  },

  "propertySet": {
    "prefix": "setp",
    "body": "set ${1:propertyName}(${2:value}) {\n\t${0};\n}",
    "description": "Creates a setter property inside a class in ES6 syntax"
  },

  "asyncFunction": {
    "prefix": "asyf",
    "body": "async function ${1:functionName}(${2:params}) {\n\t${0};\n}",
    "description": "Creates an async function"
  },

  "asyncArrowFunction": {
    "prefix": "asyfa",
    "body": "const ${1:functionName} = async (${2:params}) => ${0}",
    "description": "Creates an async arrow function"
  },

  "anonymousAsyncArrowFunction": {
    "prefix": "anasyfa",
    "body": "async (${1:params}) => ${0}",
    "description": "Creates an anonymous async arrow function"
  },

  "function": {
    "prefix": "func",
    "body": "function ${1:functionName}(${2:params}) {\n\t${0};\n}",
    "description": "Creates a function"
  },

  "arrowFunction": {
    "prefix": "afunc",
    "body": "const ${1:functionName} = (${2:params}) => ${0}",
    "description": "Creates an arrow function"
  },

  "anonymousArrowFunction": {
    "prefix": "anafunc",
    "body": "(${1:params}) => ${0}",
    "description": "Creates an anonymous arrow function"
  },

  "importType": {
    "prefix": "imt",
    "body": "import type { ${2:TypeNames} } from '${1:module}'${0}",
    "description": "Import types"
  },

  "triple-slashReference": {
    "prefix": "ref",
    "body": ["/// <reference path=\"$1\" />", "$0"],
    "description": "Triple-slash reference"
  },

  "destructureVariable": {
    "prefix": "constdes",
    "body": "const { ${2:variables} } = ${1:module}",
    "description": "Destructure variables"
  }
}

{{ if ne .chezmoi.os "windows" -}}
#!/usr/bin/env bash
# -*-shell-script-*- vim:syntax=shell-script
# code:language=shellscript
#
# Install Dependencies

set -euo pipefail

{{ template "functions-bin" }}

function check_dependencies() {
  step "Checking dependencies for the installation script..."

  if ! hash curl 2>/dev/null; then
    fail "Missing ${color6}curl${reset}!\n    Not installing due to missing dependencies."
  fi

  if ! hash gzip 2>/dev/null; then
    fail "Missing ${color6}gzip${reset}!\n    Not installing due to missing dependencies."
  fi

  info "OK!"
}

function install_fnm() {
  if hash brew 2>/dev/null; then
    step "Brewing ${color6}fnm${reset} ..."
    brew install fnm
  else
    check_dependencies

    DOWNLOAD_DIR="$(mktemp -dp /tmp "fnm-XXXXX")"
    INSTALL_DIR="$HOME/.fnm"
    URL={{ template "fnm-download-url" . }}

    mkdir -p "$INSTALL_DIR"

    step "Downloading $URL ..."

    if ! curl --progress-bar -fsLSo "$DOWNLOAD_DIR/fnm.zip" "$URL"; then
      fail "Download ${color6}fnm${reset} failed. Check that the release/filename are correct."
    fi

    gzip -dS .zip "$DOWNLOAD_DIR/fnm.zip"

    if [ -f "$DOWNLOAD_DIR/fnm" ]; then
      mv "$DOWNLOAD_DIR/fnm" "$INSTALL_DIR/fnm"
    else
      mv "$DOWNLOAD_DIR/fnm/fnm" "$INSTALL_DIR/fnm"
    fi

    chmod +x "$INSTALL_DIR/fnm"

    if ! ( echo $PATH | grep -q .fnm: ); then
      export PATH=$INSTALL_DIR:$PATH
    fi

    rm -rf $DOWNLOAD_DIR # clean temp directory
  fi
}

install_fnm
hash fnm &>/dev/null && eval "$(fnm env --use-on-cd)"

step "Install latest LTS nodeJS..."
fnm install --lts && fnm use 'lts/*'

if hash npm 2>/dev/null; then
  step "Install global node modules..."

  corepack enable
  npm install -gq @bitwarden/cli pm2
fi

success "${color6}fnm${reset}, ${color6}node${reset}, ${color6}bitwarden${reset}, and ${color6}pm2${reset} already installed!"

bw login || true
eval "$(bw unlock | grep -oE --color=never "(export BW_SESSION=".+")")"

{{- end }}
